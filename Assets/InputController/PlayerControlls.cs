//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/InputController/PlayerControlls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControlls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControlls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControlls"",
    ""maps"": [
        {
            ""name"": ""FPS_Player_Controller"",
            ""id"": ""573df7ac-5857-4218-83d4-7f49cdf48d97"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""PassThrough"",
                    ""id"": ""8a5c4222-4a5b-4704-b0f4-aec88baa06b5"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Rotation"",
                    ""type"": ""PassThrough"",
                    ""id"": ""18c9da51-1813-4d05-b459-3c0cbd227230"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""6103d999-9c59-4cb7-9252-a843093c7c7d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Squat"",
                    ""type"": ""Button"",
                    ""id"": ""12398578-9fa7-4e45-a44d-73cdd8981854"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Run"",
                    ""type"": ""Button"",
                    ""id"": ""c2c1c387-3584-46ac-9340-7077a817c3ee"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CloseAttack"",
                    ""type"": ""Button"",
                    ""id"": ""dd89fc01-73ca-4fbf-8ec5-29383097a526"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Fire"",
                    ""type"": ""PassThrough"",
                    ""id"": ""6812fcd2-c7c1-4a80-8628-5cce5179f55e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Reload"",
                    ""type"": ""Button"",
                    ""id"": ""6dc7b946-cb6d-4304-a18c-5527f9bc4e65"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Aim"",
                    ""type"": ""PassThrough"",
                    ""id"": ""60ef0c73-1499-40cb-8d24-b68d4bdb3008"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Skill_1"",
                    ""type"": ""Button"",
                    ""id"": ""06f91834-0797-4c30-b97e-f71c11049e7d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Skill_2"",
                    ""type"": ""Button"",
                    ""id"": ""ead7c36d-ebaa-4046-a6f7-cb931ea056bf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""dc3c8185-c88d-4bc0-a323-43c54b625730"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Up"",
                    ""id"": ""d7e7fb1c-5761-430e-9e5c-5b354f7ffd86"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Down"",
                    ""id"": ""63f2ce03-45aa-401e-9840-acfe84744de7"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left"",
                    ""id"": ""5d760f39-547e-4b6d-8d62-4fdac43f70d3"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right"",
                    ""id"": ""2f1d4d43-2e34-4273-bc26-2820af2962c0"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""1d4e1ae1-f82a-4523-964c-4ae7f7def461"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""029c7f62-c491-4810-847d-737f4cdf975a"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eb1e2832-1f49-4d1c-8e3a-3d72395f7fee"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7d362834-eb59-4fae-bfbb-a4c0cdc2cb03"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CloseAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d36e07bf-b65d-46e0-9111-9c366925b97e"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CloseAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""11ba8a88-3cb3-4745-8589-b466ef875dc1"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Squat"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0e0764f8-edda-4b7a-8f2f-f8a46fabe09c"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Squat"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""177c8c2f-4f16-4161-be77-60e38a862aff"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bd555a33-3f3a-44a5-805c-464b5c9aca63"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f50257c4-e89a-446b-b89d-1a36f63a4b89"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Aim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1deea950-f857-49ae-9af4-c5dfc84de346"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Aim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""743ec2cd-738b-4e06-9e12-9bf3e88297c5"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skill_1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7beb527e-83e2-4101-886c-13645ecc05ab"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skill_1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8613b0fa-16ec-47c2-99ce-afab48c13fb8"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skill_2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cd3eb09e-aa43-4165-b8eb-c6e279b0285c"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skill_2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0999f06c-b18b-4b80-bf8e-a970073488e2"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Reload"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7595aec3-00cb-4f51-9635-417d450b4514"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Reload"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d69f03e7-0415-4d5b-83dc-797484428b45"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9602d309-18ef-4e8f-a320-08b1577915b4"",
                    ""path"": ""<Gamepad>/leftStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6275ada6-83be-4dfd-9f23-627298edb029"",
                    ""path"": ""<Gamepad>/rightStick/"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // FPS_Player_Controller
        m_FPS_Player_Controller = asset.FindActionMap("FPS_Player_Controller", throwIfNotFound: true);
        m_FPS_Player_Controller_Move = m_FPS_Player_Controller.FindAction("Move", throwIfNotFound: true);
        m_FPS_Player_Controller_Rotation = m_FPS_Player_Controller.FindAction("Rotation", throwIfNotFound: true);
        m_FPS_Player_Controller_Jump = m_FPS_Player_Controller.FindAction("Jump", throwIfNotFound: true);
        m_FPS_Player_Controller_Squat = m_FPS_Player_Controller.FindAction("Squat", throwIfNotFound: true);
        m_FPS_Player_Controller_Run = m_FPS_Player_Controller.FindAction("Run", throwIfNotFound: true);
        m_FPS_Player_Controller_CloseAttack = m_FPS_Player_Controller.FindAction("CloseAttack", throwIfNotFound: true);
        m_FPS_Player_Controller_Fire = m_FPS_Player_Controller.FindAction("Fire", throwIfNotFound: true);
        m_FPS_Player_Controller_Reload = m_FPS_Player_Controller.FindAction("Reload", throwIfNotFound: true);
        m_FPS_Player_Controller_Aim = m_FPS_Player_Controller.FindAction("Aim", throwIfNotFound: true);
        m_FPS_Player_Controller_Skill_1 = m_FPS_Player_Controller.FindAction("Skill_1", throwIfNotFound: true);
        m_FPS_Player_Controller_Skill_2 = m_FPS_Player_Controller.FindAction("Skill_2", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // FPS_Player_Controller
    private readonly InputActionMap m_FPS_Player_Controller;
    private List<IFPS_Player_ControllerActions> m_FPS_Player_ControllerActionsCallbackInterfaces = new List<IFPS_Player_ControllerActions>();
    private readonly InputAction m_FPS_Player_Controller_Move;
    private readonly InputAction m_FPS_Player_Controller_Rotation;
    private readonly InputAction m_FPS_Player_Controller_Jump;
    private readonly InputAction m_FPS_Player_Controller_Squat;
    private readonly InputAction m_FPS_Player_Controller_Run;
    private readonly InputAction m_FPS_Player_Controller_CloseAttack;
    private readonly InputAction m_FPS_Player_Controller_Fire;
    private readonly InputAction m_FPS_Player_Controller_Reload;
    private readonly InputAction m_FPS_Player_Controller_Aim;
    private readonly InputAction m_FPS_Player_Controller_Skill_1;
    private readonly InputAction m_FPS_Player_Controller_Skill_2;
    public struct FPS_Player_ControllerActions
    {
        private @PlayerControlls m_Wrapper;
        public FPS_Player_ControllerActions(@PlayerControlls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_FPS_Player_Controller_Move;
        public InputAction @Rotation => m_Wrapper.m_FPS_Player_Controller_Rotation;
        public InputAction @Jump => m_Wrapper.m_FPS_Player_Controller_Jump;
        public InputAction @Squat => m_Wrapper.m_FPS_Player_Controller_Squat;
        public InputAction @Run => m_Wrapper.m_FPS_Player_Controller_Run;
        public InputAction @CloseAttack => m_Wrapper.m_FPS_Player_Controller_CloseAttack;
        public InputAction @Fire => m_Wrapper.m_FPS_Player_Controller_Fire;
        public InputAction @Reload => m_Wrapper.m_FPS_Player_Controller_Reload;
        public InputAction @Aim => m_Wrapper.m_FPS_Player_Controller_Aim;
        public InputAction @Skill_1 => m_Wrapper.m_FPS_Player_Controller_Skill_1;
        public InputAction @Skill_2 => m_Wrapper.m_FPS_Player_Controller_Skill_2;
        public InputActionMap Get() { return m_Wrapper.m_FPS_Player_Controller; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(FPS_Player_ControllerActions set) { return set.Get(); }
        public void AddCallbacks(IFPS_Player_ControllerActions instance)
        {
            if (instance == null || m_Wrapper.m_FPS_Player_ControllerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_FPS_Player_ControllerActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Rotation.started += instance.OnRotation;
            @Rotation.performed += instance.OnRotation;
            @Rotation.canceled += instance.OnRotation;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @Squat.started += instance.OnSquat;
            @Squat.performed += instance.OnSquat;
            @Squat.canceled += instance.OnSquat;
            @Run.started += instance.OnRun;
            @Run.performed += instance.OnRun;
            @Run.canceled += instance.OnRun;
            @CloseAttack.started += instance.OnCloseAttack;
            @CloseAttack.performed += instance.OnCloseAttack;
            @CloseAttack.canceled += instance.OnCloseAttack;
            @Fire.started += instance.OnFire;
            @Fire.performed += instance.OnFire;
            @Fire.canceled += instance.OnFire;
            @Reload.started += instance.OnReload;
            @Reload.performed += instance.OnReload;
            @Reload.canceled += instance.OnReload;
            @Aim.started += instance.OnAim;
            @Aim.performed += instance.OnAim;
            @Aim.canceled += instance.OnAim;
            @Skill_1.started += instance.OnSkill_1;
            @Skill_1.performed += instance.OnSkill_1;
            @Skill_1.canceled += instance.OnSkill_1;
            @Skill_2.started += instance.OnSkill_2;
            @Skill_2.performed += instance.OnSkill_2;
            @Skill_2.canceled += instance.OnSkill_2;
        }

        private void UnregisterCallbacks(IFPS_Player_ControllerActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Rotation.started -= instance.OnRotation;
            @Rotation.performed -= instance.OnRotation;
            @Rotation.canceled -= instance.OnRotation;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @Squat.started -= instance.OnSquat;
            @Squat.performed -= instance.OnSquat;
            @Squat.canceled -= instance.OnSquat;
            @Run.started -= instance.OnRun;
            @Run.performed -= instance.OnRun;
            @Run.canceled -= instance.OnRun;
            @CloseAttack.started -= instance.OnCloseAttack;
            @CloseAttack.performed -= instance.OnCloseAttack;
            @CloseAttack.canceled -= instance.OnCloseAttack;
            @Fire.started -= instance.OnFire;
            @Fire.performed -= instance.OnFire;
            @Fire.canceled -= instance.OnFire;
            @Reload.started -= instance.OnReload;
            @Reload.performed -= instance.OnReload;
            @Reload.canceled -= instance.OnReload;
            @Aim.started -= instance.OnAim;
            @Aim.performed -= instance.OnAim;
            @Aim.canceled -= instance.OnAim;
            @Skill_1.started -= instance.OnSkill_1;
            @Skill_1.performed -= instance.OnSkill_1;
            @Skill_1.canceled -= instance.OnSkill_1;
            @Skill_2.started -= instance.OnSkill_2;
            @Skill_2.performed -= instance.OnSkill_2;
            @Skill_2.canceled -= instance.OnSkill_2;
        }

        public void RemoveCallbacks(IFPS_Player_ControllerActions instance)
        {
            if (m_Wrapper.m_FPS_Player_ControllerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IFPS_Player_ControllerActions instance)
        {
            foreach (var item in m_Wrapper.m_FPS_Player_ControllerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_FPS_Player_ControllerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public FPS_Player_ControllerActions @FPS_Player_Controller => new FPS_Player_ControllerActions(this);
    public interface IFPS_Player_ControllerActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnRotation(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnSquat(InputAction.CallbackContext context);
        void OnRun(InputAction.CallbackContext context);
        void OnCloseAttack(InputAction.CallbackContext context);
        void OnFire(InputAction.CallbackContext context);
        void OnReload(InputAction.CallbackContext context);
        void OnAim(InputAction.CallbackContext context);
        void OnSkill_1(InputAction.CallbackContext context);
        void OnSkill_2(InputAction.CallbackContext context);
    }
}
